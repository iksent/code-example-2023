@use "Core/styles/theming" as *;
@use "Core/styles/mixins" as *;
@use "Core/styles/animations/fade-in-zoom" as *;
@use "~rfs/scss" as rfs;

$card-color: color-neutral('card');
$card-color-transparent: color-neutral('card-tr-100');

.root {
  transition-duration: 300ms;
  transition-property: transform, border, border-radius, opacity !important;
  position: relative;
  z-index: 0;
}

.disabled {
  pointer-events: none;

  &-base {
    opacity: 0.5 !important;
  }
}

.base {
  border: 1px solid color-border();

  &-error {
    border: 1px solid color('negative', '100');
  }
}

.alt {
  background-color: $card-color;
}

.third {
  background-color: color-neutral('card-alt');
  box-shadow: 0 0 100px 0 rgba(0, 0, 0, 0.07);
}

.isActive {
  &.active-base {
    border: 2px solid color-primary();
  }
}

.remover {
  @include use-fade-in-zoom();
  @include pos($t: spacing(-1), $l: spacing(-1));
}

/*
 * Radius
 */

.radius {
  &-xs {
    border-radius: spacing(1.5);
  }

  &-sm {
    @include adaptive-spacing(3, border-radius);
  }

  &-md {
    @include adaptive-spacing(4, border-radius);
  }

  &-lg {
    @include adaptive-spacing(6, border-radius);
  }

  &-xl {
    @include adaptive-spacing(8, border-radius);
  }
}

/*
 * Paddings
 */

.padding {
  &-xxs {
    @include adaptive-spacing(2, padding);
  }

  &-xs {
    @include adaptive-spacing(3, padding);
  }

  &-sm {
    @include adaptive-spacing(4, padding);
  }

  &-md {
    @include adaptive-spacing(5, padding);
  }

  &-lg {
    @include adaptive-spacing(6, padding);
  }
}

/*
 * Hovers
 */

@media (hover: hover) {
  .clickable {
    &:not(.isActive):hover {
      opacity: 1;

      &.hover {
        &-scale {
          transition-property: transform;
          transform: scale(1.01);
        }

        &-border {
          border-color: color-border('200');
        }

        &-border-alt {
          border-color: color-primary();
        }
      }
    }
  }
}
